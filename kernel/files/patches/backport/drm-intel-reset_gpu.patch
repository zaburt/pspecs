diff -Nur linux-2.6.37-old//drivers/gpu/drm/i915/i915_drv.c linux-2.6.37/drivers/gpu/drm/i915/i915_drv.c
--- linux-2.6.37-old//drivers/gpu/drm/i915/i915_drv.c	2013-12-14 01:57:19.712000003 +0200
+++ linux-2.6.37/drivers/gpu/drm/i915/i915_drv.c	2013-12-14 01:57:54.599000004 +0200
@@ -405,6 +405,14 @@
 	return wait_for(I915_READ(MCHBAR_MIRROR_BASE + ILK_GDSR) & 0x1, 500);
 }
 
+static int gen6_do_reset(struct drm_device *dev, u8 flags)
+{
+	struct drm_i915_private *dev_priv = dev->dev_private;
+
+	I915_WRITE(GEN6_GDRST, GEN6_GRDOM_FULL);
+	return wait_for((I915_READ(GEN6_GDRST) & GEN6_GRDOM_FULL) == 0, 500);
+}
+
 /**
  * i965_reset - reset chip after a hang
  * @dev: drm device to reset
@@ -439,6 +447,9 @@
 	if (get_seconds() - dev_priv->last_gpu_reset < 5) {
 		DRM_ERROR("GPU hanging too fast, declaring wedged!\n");
 	} else switch (INTEL_INFO(dev)->gen) {
+	case 6:
+		ret = gen6_do_reset(dev, flags);
+		break;
 	case 5:
 		ret = ironlake_do_reset(dev, flags);
 		break;
diff -Nur linux-2.6.37-old//drivers/gpu/drm/i915/i915_reg.h linux-2.6.37/drivers/gpu/drm/i915/i915_reg.h
--- linux-2.6.37-old//drivers/gpu/drm/i915/i915_reg.h	2013-12-14 01:57:19.711000003 +0200
+++ linux-2.6.37/drivers/gpu/drm/i915/i915_reg.h	2013-12-14 01:57:54.610000004 +0200
@@ -78,6 +78,22 @@
 #define  GRDOM_RENDER	(1<<2)
 #define  GRDOM_MEDIA	(3<<2)
 
+
+#define GEN6_MBCUNIT_SNPCR      0x900c /* for LLC config */
+#define   GEN6_MBC_SNPCR_SHIFT  21
+#define   GEN6_MBC_SNPCR_MASK   (3<<21)
+#define   GEN6_MBC_SNPCR_MAX    (0<<21)
+#define   GEN6_MBC_SNPCR_MED    (1<<21)
+#define   GEN6_MBC_SNPCR_LOW    (2<<21)
+#define   GEN6_MBC_SNPCR_MIN    (3<<21) /* only 1/16th of the cache is shared */
+
+#define GEN6_GDRST      0x941c
+#define  GEN6_GRDOM_FULL                (1 << 0)
+#define  GEN6_GRDOM_RENDER              (1 << 1)
+#define  GEN6_GRDOM_MEDIA               (1 << 2)
+#define  GEN6_GRDOM_BLT                 (1 << 3)
+
+
 /* VGA stuff */
 
 #define VGA_ST01_MDA 0x3ba
